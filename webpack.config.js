////////////////////////////////////////////////////////////////////////////////////////////////////
//// IMPORTS
////////////////////////////////////////////////////////////////////////////////////////////////////
const { resolve } = require("path");
const VueLoaderPlugin = require("vue-loader/lib/plugin");
const MiniCssExtractPlugin = require("mini-css-extract-plugin");
const RemovePlugin = require("remove-files-webpack-plugin");
const dotenv = require("dotenv").config();



////////////////////////////////////////////////////////////////////////////////////////////////////
//// BASE DEFINITIONS
////////////////////////////////////////////////////////////////////////////////////////////////////
if(dotenv.error)
	throw new Error("failed to load .env file");

const mode = process.env["NODE_ENV"];
const dev = (mode === "development");
const config = {
	resolve: {
		alias: {},
		extensions: []
	},
	entry: {},
	output: {},
	module: {
		rules: []
	},
	plugins: [],
	mode,
};

const path = src => resolve(__dirname, src);
const styleLoaders = [/*"style-loader",*/{loader: MiniCssExtractPlugin.loader}, "css-loader"];
const sassLoaders = [...styleLoaders, "sass-loader"];
const libraries = /(node_module|bower_component)s/gi;



////////////////////////////////////////////////////////////////////////////////////////////////////
//// TARGET
////////////////////////////////////////////////////////////////////////////////////////////////////
config.target = "web";



////////////////////////////////////////////////////////////////////////////////////////////////////
//// MODULE RESOLUTION
////////////////////////////////////////////////////////////////////////////////////////////////////
config.resolve.alias["@js"] = path("src/js/");

config.resolve.alias["@vue"] = path("src/vue/");
config.resolve.alias["@components"] = path("src/vue/components/");

config.resolve.alias["@css"] = path("src/scss/");

config.resolve.extensions = [
	"js",
	"vue",
	"scss",
	"css"
].map(ext => `.${ext}`);



////////////////////////////////////////////////////////////////////////////////////////////////////
//// ENTRIES
////////////////////////////////////////////////////////////////////////////////////////////////////
config.entry["index"] = "@js/index.js";
config.entry["styles"] = "@css/styles.scss";



////////////////////////////////////////////////////////////////////////////////////////////////////
//// OUTPUTS
////////////////////////////////////////////////////////////////////////////////////////////////////
config.output["path"] = path("dist/");
config.output["filename"] = "[name].js";



////////////////////////////////////////////////////////////////////////////////////////////////////
//// DEV TOOLS
////////////////////////////////////////////////////////////////////////////////////////////////////
config.devtool = dev ? "cheap-module-eval-source-map" : false;



////////////////////////////////////////////////////////////////////////////////////////////////////
//// MODULES/LOADERS
////////////////////////////////////////////////////////////////////////////////////////////////////
config.module.rules.push({
	test: /\.js$/i,
	exclude: libraries,
	use: [
		"babel-loader"
	]
});

config.module.rules.push({
	test: /\.(png|jpe?g|gif|svg)$/i,
	exclude: libraries,
	use: [
		{
			loader: "url-loader",
			options: {
				limit: 8192,
				name: "[name].[hash:8].[ext]"
			}
		},
		{
			loader: "img-loader",
			options: {
				enabled: !dev
			}
		}
	]
});

config.module.rules.push({
	test: /\.(woff2?|eot|ttf|otf)$/i,
	loader: "file-loader"
});

config.module.rules.push({
    test: /\.css$/i,
    use: styleLoaders
});

config.module.rules.push({
	test: /\.s[ac]ss$/i,
	use: sassLoaders
});

config.module.rules.push({
	test: /\.vue$/i,
	loader: "vue-loader",
    options: {
		loaders: {
			css: `vue-style-loader${sassLoaders.map(e=>`!${e}`).join("")}`,
			scss: `vue-style-loader${sassLoaders.map(e=>`!${e}`).join("")}`,
			sass: `vue-style-loader${sassLoaders.map(e=>`!${e}`).join("")}`,
		}
	}
});



////////////////////////////////////////////////////////////////////////////////////////////////////
//// PLUGINS
////////////////////////////////////////////////////////////////////////////////////////////////////
config.plugins.push(new VueLoaderPlugin());
config.plugins.push(new MiniCssExtractPlugin({
    filename: "[name].css",
    ignoreOrder: true,
}));
config.plugins.push(new RemovePlugin({
    after: {
        include: [
            "styles.js",
            "index.css",
        ].map(e => path(`dist/${e}`))
    }
}));



////////////////////////////////////////////////////////////////////////////////////////////////////
//// EXPORT
////////////////////////////////////////////////////////////////////////////////////////////////////
module.exports = config;
